/*
 * Starlink Enterprise API
 *
 * <h3>Description</h3>API to manage accounts and user terminals. This page is deprecated, please use the new documentation site: <a href='https://starlink.readme.io/'>https://starlink.readme.io/</a><h3>Authentication - OIDC</h3><p>To authenticate with this API using OIDC, <a target='_blank' href='/api/auth/.well-known/openid-configuration'>Well Known URL</a> and attach the result to your requests with the <strong>Authorize</strong> button below.</p>
 *
 * The version of the OpenAPI document: 1
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct QueryBillingCycleRequest {
    #[serde(rename = "serviceLinesFilter", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub service_lines_filter: Option<Option<Vec<String>>>,
    #[serde(rename = "previousBillingCycles", skip_serializing_if = "Option::is_none")]
    pub previous_billing_cycles: Option<i32>,
    #[serde(rename = "queryStartDateParam", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub query_start_date_param: Option<Option<String>>,
    #[serde(rename = "pageIndex", skip_serializing_if = "Option::is_none")]
    pub page_index: Option<i32>,
    #[serde(rename = "pageLimit", skip_serializing_if = "Option::is_none")]
    pub page_limit: Option<i32>,
    #[serde(rename = "activeServiceLinesOnly", skip_serializing_if = "Option::is_none")]
    pub active_service_lines_only: Option<bool>,
}

impl QueryBillingCycleRequest {
    pub fn new() -> QueryBillingCycleRequest {
        QueryBillingCycleRequest {
            service_lines_filter: None,
            previous_billing_cycles: None,
            query_start_date_param: None,
            page_index: None,
            page_limit: None,
            active_service_lines_only: None,
        }
    }
}

