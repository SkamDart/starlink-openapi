/*
 * Starlink Enterprise API
 *
 * <h3>Description</h3>API to manage accounts and user terminals. This page is deprecated, please use the new documentation site: <a href='https://starlink.readme.io/'>https://starlink.readme.io/</a><h3>Authentication - OIDC</h3><p>To authenticate with this API using OIDC, <a target='_blank' href='/api/auth/.well-known/openid-configuration'>Well Known URL</a> and attach the result to your requests with the <strong>Authorize</strong> button below.</p>
 *
 * The version of the OpenAPI document: 1
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct DataBlockUsagePublicResponse {
    #[serde(rename = "startDateUtc", skip_serializing_if = "Option::is_none")]
    pub start_date_utc: Option<String>,
    #[serde(rename = "expirationDateUtc", skip_serializing_if = "Option::is_none")]
    pub expiration_date_utc: Option<String>,
    #[serde(rename = "totalAmountGB", skip_serializing_if = "Option::is_none")]
    pub total_amount_gb: Option<f64>,
    #[serde(rename = "consumedAmountGB", skip_serializing_if = "Option::is_none")]
    pub consumed_amount_gb: Option<f64>,
    #[serde(rename = "perBlockAmountGB", skip_serializing_if = "Option::is_none")]
    pub per_block_amount_gb: Option<f64>,
    #[serde(rename = "dataBlockType", skip_serializing_if = "Option::is_none")]
    pub data_block_type: Option<models::DataBlockType>,
    #[serde(rename = "productId", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub product_id: Option<Option<String>>,
    #[serde(rename = "blocksCount", skip_serializing_if = "Option::is_none")]
    pub blocks_count: Option<i32>,
    #[serde(rename = "perBlockPrice", skip_serializing_if = "Option::is_none")]
    pub per_block_price: Option<f64>,
    #[serde(rename = "totalPrice", skip_serializing_if = "Option::is_none")]
    pub total_price: Option<f64>,
    #[serde(rename = "isoCurrencyCode", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub iso_currency_code: Option<Option<String>>,
}

impl DataBlockUsagePublicResponse {
    pub fn new() -> DataBlockUsagePublicResponse {
        DataBlockUsagePublicResponse {
            start_date_utc: None,
            expiration_date_utc: None,
            total_amount_gb: None,
            consumed_amount_gb: None,
            per_block_amount_gb: None,
            data_block_type: None,
            product_id: None,
            blocks_count: None,
            per_block_price: None,
            total_price: None,
            iso_currency_code: None,
        }
    }
}

