/*
 * Starlink Enterprise API
 *
 * <h3>Description</h3>API to manage accounts and user terminals. This page is deprecated, please use the new documentation site: <a href='https://starlink.readme.io/'>https://starlink.readme.io/</a><h3>Authentication - OIDC</h3><p>To authenticate with this API using OIDC, <a target='_blank' href='/api/auth/.well-known/openid-configuration'>Well Known URL</a> and attach the result to your requests with the <strong>Authorize</strong> button below.</p>
 *
 * The version of the OpenAPI document: 1
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum DataBlockType {
    #[serde(rename = "IncludedWithBaseSubscription")]
    IncludedWithBaseSubscription,
    #[serde(rename = "RecurringPerBillingCycle")]
    RecurringPerBillingCycle,
    #[serde(rename = "Overage")]
    Overage,
    #[serde(rename = "OneTimePurchase")]
    OneTimePurchase,

}

impl std::fmt::Display for DataBlockType {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::IncludedWithBaseSubscription => write!(f, "IncludedWithBaseSubscription"),
            Self::RecurringPerBillingCycle => write!(f, "RecurringPerBillingCycle"),
            Self::Overage => write!(f, "Overage"),
            Self::OneTimePurchase => write!(f, "OneTimePurchase"),
        }
    }
}

impl Default for DataBlockType {
    fn default() -> DataBlockType {
        Self::IncludedWithBaseSubscription
    }
}

