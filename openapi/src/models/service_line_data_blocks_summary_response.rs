/*
 * Starlink Enterprise API
 *
 * <h3>Description</h3>API to manage accounts and user terminals. This page is deprecated, please use the new documentation site: <a href='https://starlink.readme.io/'>https://starlink.readme.io/</a><h3>Authentication - OIDC</h3><p>To authenticate with this API using OIDC, <a target='_blank' href='/api/auth/.well-known/openid-configuration'>Well Known URL</a> and attach the result to your requests with the <strong>Authorize</strong> button below.</p>
 *
 * The version of the OpenAPI document: 1
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ServiceLineDataBlocksSummaryResponse {
    /// The current billing cycle's monthly recurring data blocks.
    #[serde(rename = "recurringBlocksCurrentBillingCycle", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub recurring_blocks_current_billing_cycle: Option<Option<Vec<models::DataBlockSummaryResponse>>>,
    /// Next billing cycle's monthly recurring data blocks.
    #[serde(rename = "recurringBlocksNextBillingCycle", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub recurring_blocks_next_billing_cycle: Option<Option<Vec<models::DataBlockSummaryResponse>>>,
    /// What recurring blocks will be when the service line switches to the delayed product.
    #[serde(rename = "delayedProductRecurringBlocksNextCycle", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub delayed_product_recurring_blocks_next_cycle: Option<Option<Vec<models::DataBlockSummaryResponse>>>,
    /// What top up blocks were automatically purchased because the service line was out of data and opted in.
    #[serde(rename = "topUpBlocksOptInPurchase", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub top_up_blocks_opt_in_purchase: Option<Option<Vec<models::DataBlockSummaryResponse>>>,
    /// What top up blocks were manually purchased.
    #[serde(rename = "topUpBlocksOneTimePurchase", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub top_up_blocks_one_time_purchase: Option<Option<Vec<models::DataBlockSummaryResponse>>>,
}

impl ServiceLineDataBlocksSummaryResponse {
    pub fn new() -> ServiceLineDataBlocksSummaryResponse {
        ServiceLineDataBlocksSummaryResponse {
            recurring_blocks_current_billing_cycle: None,
            recurring_blocks_next_billing_cycle: None,
            delayed_product_recurring_blocks_next_cycle: None,
            top_up_blocks_opt_in_purchase: None,
            top_up_blocks_one_time_purchase: None,
        }
    }
}

